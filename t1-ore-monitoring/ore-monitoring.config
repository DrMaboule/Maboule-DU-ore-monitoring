{"slots":{"0":{"name":"hubCoal","type":{"events":[],"methods":[]}},"1":{"name":"screenCoal","type":{"events":[],"methods":[]}},"2":{"name":"bauxiteHub","type":{"events":[],"methods":[]}},"3":{"name":"beauxiteScreen","type":{"events":[],"methods":[]}},"4":{"name":"hematiteHub","type":{"events":[],"methods":[]}},"5":{"name":"hematiteScreen","type":{"events":[],"methods":[]}},"6":{"name":"quartzHub","type":{"events":[],"methods":[]}},"7":{"name":"quartzScreen","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"local hematite_container_type = \"L\" --export\nlocal hematite_container_number = 1 --export\nlocal bauxite_container_type = \"L\" --export\nlocal bauxite_container_number = 1 --export\nlocal coal_container_type = \"L\" --export\nlocal coal_container_number = 1 --export\nlocal quartz_container_type = \"L\" --export\nlocal quartz_container_number = 1 --export\nlocal display_alert = true --export\nlocal critical_level_threshold = 1000 --export\nlocal low_level_threshold = 50000 --export\n\n\nlocal function buildOre(screen, hub, label, volumicMass, tailleContainer, containerNumber)\n    local volumeContainerMax = getContainerMaxVolume(tailleContainer, containerNumber)\n    ore = {}\n    ore[\"screen\"] = screen\n    ore[\"hub\"] = hub\n    ore[\"label\"] = label\n    ore[\"volumicMass\"] = volumicMass\n    ore[\"volumeMax\"] = volumeContainerMax\n    return ore\nend\n\nlocal function getOreLevelStatus(currentVolume)\n    if  currentVolume <= critical_level_threshold then \n        return \"critical\"\n    elseif currentVolume <= low_level_threshold then \n        return \"low\"\n    else \n        return \"high\"\n    end\nend\n\n\n\nlocal ores = {\n    buildOre(hematiteScreen, hematiteHub, \"Hematite\", 5.04, hematite_container_type, hematite_container_number),\n    buildOre(beauxiteScreen, bauxiteHub, \"Bauxite\", 1.28, bauxite_container_type, bauxite_container_number),\n    buildOre(screenCoal, hubCoal, \"Coal\", 1.35, coal_container_type, coal_container_number),\n    buildOre(quartzScreen, quartzHub, \"Quartz\", 2.65, quartz_container_type, quartz_container_number)\n}\n\n-- html\nlocal style = [[\n    <html>\n        <head>\n            <style>\n            html body .main-container {\n                margin-top: 100px;\n                display: flex;\n                align-items: center;\n                flex-direction: column;\n                height: 560px;\n                width: 1000px;\n                font-size: 50px;\n            }\n\n            html body .main-container.high {\n                color: #5fdb25;\n            }\n\n            html body .main-container.low {\n                color: rgb(238, 238, 37);\n            }\n\n            html body .main-container.critical {\n                color: rgb(255, 43, 43);\n            }\n\n            html body .main-container .subtitle {\n                margin-top: 50px;\n                font-size: 40px;\n            }\n            html body .main-container .volume {\n                margin-top: 10px;\n                font-size: 60px;\n                font-weight: bold;\n            }\n            html body .main-container .gauge {\n                border-radius: 20px;\n                margin-top: 10px;\n                width: 480px;\n                height: 50px;\n                position: relative;\n            }\n\n            html body .main-container .gauge.high {\n                border: 2px solid #5fdb25;\n            }\n\n            html body .main-container .gauge.low {\n                border: 2px solid rgb(238, 238, 37);\n            }\n\n            html body .main-container .gauge.critical {\n                border: 2px solid  rgb(255, 43, 43);\n            }\n\n            html body .main-container .gauge .fuel-level {\n                position: absolute;\n                border-radius: 20px;\n                height: 100%;\n                left: 0;\n            }\n\n            html body .main-container .gauge .fuel-level.high {\n                background-color: #5fdb25;\n            }\n\n            html body .main-container .gauge .fuel-level.low {\n                background-color: rgb(238, 238, 37);\n            }\n\n            html body .main-container .gauge .fuel-level.critical {\n                background-color:  rgb(255, 43, 43);\n            }\n            </style>\n       </head>\n   ]]\n\nfor i = 1, 4 do\n\n    local currentOre = ores[i]\n    local currentOreMass = currentOre.hub.getItemsMass()\n    local currentOreVolume = currentOreMass / currentOre.volumicMass\n    local currentOreVolumeString = roundWithUnit(currentOreVolume, \"L\")\n    local currentOreFilledPourcentageString =\n        roundPourcentage(currentOreVolume * 100 / currentOre.volumeMax)\n\n    local oreStatus = \"high\"    \n\n    if display_alert == true then\n        oreStatus = getOreLevelStatus(currentOreVolume)\n    end\n\n    local html = [[\n           <body>\n           <div class=\"main-container ]].. oreStatus ..[[\">\n       \n               <span class=\"title\">\n                       ]] .. currentOre.label .. [[\n               </span>\n       \n               <span class=\"subtitle\">\n                   Avalaible Volume\n               </span>\n       \n               <span class=\"volume\">\n                   ]] .. currentOreVolumeString .. [[\n               </span>\n       \n               <div class=\"gauge ]].. oreStatus ..[[\">\n                   <div class=\"fuel-level ]].. oreStatus ..[[\" style=\"width: ]] ..\n                     currentOreFilledPourcentageString .. [[%;\"></div>\n               </div>\n       \n           </div>        \n       ]]\n\n    currentOre.screen.setHTML(style .. html)\n\nend\n","filter":{"args":[{"value":"Live"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"0"},{"code":"unit.setTimer(\"Live\", 2);","filter":{"args":[],"signature":"start()","slotKey":"-2"},"key":"1"},{"code":"function roundWithUnit(num, unit)\n    if num > 10000 then\n        return string.format(\"%.2f K\" .. unit, num / 1000)\n    else\n        return string.format(\"%.2f \" .. unit, num)\n    end\nend\n\nfunction roundPourcentage(num) return string.format(\"%.0f\", num) end\n\nfunction getContainerMaxVolume(containerType, containerNumber)\n    if containerType == \"L\" then\n        return 153600 * containerNumber\n    elseif containerType == \"M\" then\n        return 76800 * containerNumber\n    else\n        return 7900 * containerNumber\n    end\nend\n","filter":{"args":[],"signature":"start()","slotKey":"-3"},"key":"2"}],"methods":[],"events":[]}